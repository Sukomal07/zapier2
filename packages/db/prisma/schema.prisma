generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  verified Boolean
  zaps     Zap[]
}

model Zap {
  id        String   @id @default(uuid())
  userId    String
  triggerId String
  actions   Action[]
  trigger   Trigger?
  user      User     @relation(fields: [userId], references: [id])
  zapRuns   ZapRun[]
}

model Trigger {
  id                 String            @id @default(uuid())
  zapId              String            @unique
  availableTriggerId String
  metadata           Json              @default("{}")
  type               AvailableTriggers @relation(fields: [availableTriggerId], references: [id])
  zap                Zap               @relation(fields: [zapId], references: [id])
}

model Action {
  id                String           @id @default(uuid())
  zapId             String
  availableActionId String
  metadata          Json             @default("{}")
  sortingOrder      Int              @default(0)
  type              AvailableActions @relation(fields: [availableActionId], references: [id])
  zap               Zap              @relation(fields: [zapId], references: [id])
}

model AvailableActions {
  id      String   @id @default(uuid())
  name    String
  image   String
  actions Action[]
}

model AvailableTriggers {
  id       String    @id @default(uuid())
  name     String
  image    String
  triggers Trigger[]
}

model ZapRun {
  id           String        @id @default(uuid())
  zapId        String
  metadata     Json
  zap          Zap           @relation(fields: [zapId], references: [id])
  zapRunOutbox ZapRunOutbox?
}

model ZapRunOutbox {
  id       String @id @default(uuid())
  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id])
}
